# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell" # set by `omz`

CASE_SENSITIVE=false
# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git nvm zsh-autosuggestions)

source $ZSH/oh-my-zsh.sh

# User configuration

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#

# Config Quick Access
alias dots="cd ~/.dotfiles"
alias zshconf="nvim ~/.zshrc"
alias nvconf="cd ~/.config/nvim; nvim ."
alias alaconf="nvim ~/.config/alacritty"
alias tmuxconf="nvim ~/.tmux.conf"
alias wezconf="cd ~/.config/wezterm; nvim ."
alias ghostconf="nvim ~/.config/ghostty/config"

# Zsh Quick Refresh
alias refresh="source ~/.zshrc"

# Directory Quick Access
alias dev="cd ~/Dev"
alias me="cd ~/Personal"
alias notes="cd ~/notes"

# Neovim
alias v="nvim ."

# Development Shortcuts
alias dc="docker compose"

# Git aliases
alias gmp='git checkout master; git pull;'
alias gdp='git checkout develop; git pull;'
alias gm='git checkout master'
alias gs='git status'
alias gco='git checkout'
alias gcb='git checkout -b'
alias grn='git branch -m'
alias gt='git log --all --decorate --oneline --graph'
alias gb='git branch -a -vv'
alias gsl='git stash list'

checkout_advanced() {
    if [[ -n $1 ]] then
        git checkout $1
        return
    fi
    git branch | fzf-tmux -p | xargs git checkout
}
alias gco=checkout_advanced

stash-curr() {
    git stash save $1
}
alias gss=stash-curr

apply-stash() {
    git stash apply $1
}
alias gsa=apply-stash

open-git-remote() {
    git remote -v | cut -w -f2 | fzf-tmux -p | xargs open
}
alias remote=open-git-remote

create-commit() {
    git commit -m "$1"
}
alias gc=create-commit

reset-soft-commit() {
    git reset --soft HEAD~$1
}
alias grs=reset-soft-commit

PATH=~/.console-ninja/.bin:$PATH
export ANDROID_HOME=$HOME/Library/Android/sdk
PATH=$PATH:$ANDROID_HOME/emulator
PATH=$PATH:$ANDROID_HOME/platform-tools
export JAVA_HOME=/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
alias mysql=/opt/homebrew/bin/mysql

# Fuzzy Find Aliases
# deps: fzf, fd
# Uncomment below based on OS.

find_project() {
    local proj
    proj=$(fd . ~/Dev --type d -a -d 1 | fzf-tmux -p)

    if [[ -n $proj ]] then
        echo "\n\tðŸ›¬ You are now in: $proj\n"
        cd $proj
    fi
}
alias f='fd --hidden --exclude .git| fzf-tmux -p | xargs nvim'

alias fp=find_project

# ULOS v2 DB Migration Aliases
generate_migration() {
    docker compose run --rm backend npm run typeorm:migration:generate --name=$1
}
alias dbg=generate_migration

alias dbm="docker compose run --rm backend npm run typeorm:migration:run"
alias dbs="docker compose run --rm backend npm run typeorm:migration:seed"

alias mux=tmuxinator
alias muxconf="cd ~/.config/tmuxinator"
alias air="~/go/bin/air"
source /opt/homebrew/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
source /opt/homebrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
eval "$(zoxide init --cmd cd zsh)"
